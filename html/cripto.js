"use strict";var cripto={};(()=>{function plot(t){for(var e,r={},o=(t+"").split(""),n=[],a=o[0],i=256,h=1;h<o.length;h++)null!=r[a+(e=o[h])]?a+=e:(n.push(a.length>1?r[a]:a.charCodeAt(0)),r[a+e]=i,i++,a=e);n.push(a.length>1?r[a]:a.charCodeAt(0));for(h=0;h<n.length;h++)n[h]=String.fromCharCode(n[h]);return n.join("")}function unplot(t){for(var e,r={},o=(t+"").split(""),n=o[0],a=n,i=[n],h=256,c=1;c<o.length;c++){var d=o[c].charCodeAt(0);e=d<256?o[c]:r[d]?r[d]:a+n,i.push(e),n=e.charAt(0),r[h]=a+n,h++,a=e}return i.join("")}const TTR=t=>{let e=[];for(let r=0;r<t.length;r++){let o=t.charCodeAt(r);e[r]=o>=33&&o<=126?String.fromCharCode(33+(o+14)%94):String.fromCharCode(o)}return e.join("")},toHex=t=>`${t}`.match(/.{1,1}/g).reduce((t,e)=>t+e.charCodeAt(0).toString(16),""),Hex2a=t=>`${t}`.match(/.{1,2}/g).reduce((t,e)=>t+String.fromCharCode(parseInt(e,16)),"");var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",b64re=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;const toB64=function(t){for(var e,r,o,n,a="",i=0,h=(t=String(t)).length%3;i<t.length;){if((r=t.charCodeAt(i++))>255||(o=t.charCodeAt(i++))>255||(n=t.charCodeAt(i++))>255)throw new TypeError("Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range.");e=r<<16|o<<8|n,a+=b64.charAt(e>>18&63)+b64.charAt(e>>12&63)+b64.charAt(e>>6&63)+b64.charAt(63&e)}return h?a.slice(0,h-3)+"===".substring(h):a},B642a=function(t){if(t=String(t).replace(/[\t\n\f\r ]+/g,""),!b64re.test(t))throw new TypeError("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");t+="==".slice(2-(3&t.length));for(var e,r,o,n="",a=0;a<t.length;)e=b64.indexOf(t.charAt(a++))<<18|b64.indexOf(t.charAt(a++))<<12|(r=b64.indexOf(t.charAt(a++)))<<6|(o=b64.indexOf(t.charAt(a++))),n+=64===r?String.fromCharCode(e>>16&255):64===o?String.fromCharCode(e>>16&255,e>>8&255):String.fromCharCode(e>>16&255,e>>8&255,255&e);return n},toEval=arg=>eval(`${arg}`),unary=t=>(...e)=>t(e[0]),_pipe=(t,e)=>r=>t(e(r)),pipe=(...t)=>t.reduce(_pipe);cripto={toCode:pipe(toHex,TTR,toB64,TTR),toText:pipe(TTR,B642a,TTR,Hex2a),toCodeObj:pipe(toHex,TTR,toB64,TTR,unary(JSON.stringify)),toObj:pipe(unary(JSON.parse),TTR,B642a,TTR,Hex2a),toFun:pipe(toEval,TTR,B642a,TTR,Hex2a),pipe:pipe,unary:unary,TTR:TTR,plot:plot,unplot:unplot}})();