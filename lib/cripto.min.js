"use strict";const fs=require("fs");function plot(s){for(var dict={},data=(s+"").split(""),out=[],currChar,phrase=data[0],code=256,i=1;i<data.length;i++)null!=dict[phrase+(currChar=data[i])]?phrase+=currChar:(out.push(phrase.length>1?dict[phrase]:phrase.charCodeAt(0)),dict[phrase+currChar]=code,code++,phrase=currChar);out.push(phrase.length>1?dict[phrase]:phrase.charCodeAt(0));for(var i=0;i<out.length;i++)out[i]=String.fromCharCode(out[i]);return out.join("")}function unplot(s){for(var dict={},data=(s+"").split(""),currChar=data[0],oldPhrase=currChar,out=[currChar],code=256,phrase,i=1;i<data.length;i++){var currCode=data[i].charCodeAt(0);phrase=currCode<256?data[i]:dict[currCode]?dict[currCode]:oldPhrase+currChar,out.push(phrase),currChar=phrase.charAt(0),dict[code]=oldPhrase+currChar,code++,oldPhrase=phrase}return out.join("")}const TTR=x=>{let s=[];for(let i=0;i<x.length;i++){let j=x.charCodeAt(i);s[i]=j>=33&&j<=126?String.fromCharCode(33+(j+14)%94):String.fromCharCode(j)}return s.join("")},toHex=str=>`${str}`.match(/.{1,1}/g).reduce((acc,char)=>acc+char.charCodeAt(0).toString(16),""),Hex2a=str=>`${str}`.match(/.{1,2}/g).reduce((acc,char)=>acc+String.fromCharCode(parseInt(char,16)),"");var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",b64re=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;const toB64=function(string){for(var bitmap,a,b,c,result="",i=0,rest=(string=String(string)).length%3;i<string.length;){if((a=string.charCodeAt(i++))>255||(b=string.charCodeAt(i++))>255||(c=string.charCodeAt(i++))>255)throw new TypeError("Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range.");bitmap=a<<16|b<<8|c,result+=b64.charAt(bitmap>>18&63)+b64.charAt(bitmap>>12&63)+b64.charAt(bitmap>>6&63)+b64.charAt(63&bitmap)}return rest?result.slice(0,rest-3)+"===".substring(rest):result},B642a=function(string){if(string=String(string).replace(/[\t\n\f\r ]+/g,""),!b64re.test(string))throw new TypeError("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");string+="==".slice(2-(3&string.length));for(var bitmap,result="",r1,r2,i=0;i<string.length;)bitmap=b64.indexOf(string.charAt(i++))<<18|b64.indexOf(string.charAt(i++))<<12|(r1=b64.indexOf(string.charAt(i++)))<<6|(r2=b64.indexOf(string.charAt(i++))),result+=64===r1?String.fromCharCode(bitmap>>16&255):64===r2?String.fromCharCode(bitmap>>16&255,bitmap>>8&255):String.fromCharCode(bitmap>>16&255,bitmap>>8&255,255&bitmap);return result},toEval=arg=>eval(`${arg}`),unary=fn=>(...args)=>fn(args[0]),_pipe=(a,b)=>arg=>a(b(arg)),pipe=(...ops)=>ops.reduce(_pipe),cripto={toCode:pipe(toHex,TTR,toB64,TTR),toText:pipe(TTR,B642a,TTR,Hex2a),toCodeObj:pipe(toHex,TTR,toB64,TTR,unary(JSON.stringify)),toObj:pipe(unary(JSON.parse),TTR,B642a,TTR,Hex2a),toFun:pipe(toEval,TTR,B642a,TTR,Hex2a),fileToJson:uri=>{try{const file=fs.readFileSync(uri,"ascii"),preparse=cripto.toObj(file);var parsed;return"string"==typeof preparse?JSON.parse(preparse):preparse}catch(err){throw new Error(`Error: ${err}`)}},fileToFun:uri=>{try{const file=fs.readFileSync(uri,"ascii"),funcion=cripto.toFun(file);return funcion}catch(err){throw new Error(`Error: ${err}`)}},fileToText:uri=>{try{const file=fs.readFileSync(uri,"ascii"),texto=cripto.toText(file);return texto}catch(err){throw new Error(`Error: ${err}`)}},pipe:pipe,unary:unary,TTR:TTR,plot:plot,unplot:unplot};module.exports={cripto:cripto};